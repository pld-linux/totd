#!/bin/sh
#
# totd	This shell script starts or stops the TOTD IPv6->IPv4 DNS translator
#
# chkconfig:	345 90 25
#
# description:	the TOT daemon translates requests for IPv6 names and returns
#		a pre-designated relay address for them.
#
# pidfile:	/var/run/totd.pid
# config:	/etc/totd.conf


# Source function library
. /etc/rc.d/init.d/functions

# Get network config
. /etc/sysconfig/network

# Get service config
[ -f /etc/sysconfig/totd ] && . /etc/sysconfig/totd

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network -a "$1" != stop -a "$1" != status ]; then
		msg_network_down TOTD
		exit 1
	fi
else
	exit 0
fi

# Sanity check
[ -f /etc/totd.conf ] || exit 0

RETVAL=0
# See how we were called.
case "$1" in
  start)
	# Check if the service is already running?
	if [ ! -f /var/lock/subsys/totd ]; then
		msg_starting TOTD
		daemon $SERVICE_RUN_NICE_LEVEL totd
		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/totd
	else
		msg_already_running TOTD
	fi
	;;
  stop)
	# Stop daemons.
	if [ -f /var/lock/subsys/totd ]; then
		msg_stopping TOTD
		killproc totd
		rm -f /var/lock/subsys/totd >/dev/null 2>&1
	else
		msg_not_running TOTD
	fi
	;;
  restart|force-reload)
	$0 stop
	$0 start
	exit $?
	;;
  reload)
	if [ -f /var/lock/subsys/totd ]; then
		msg_reloading TOTD
		busy
		$0 stop
		$0 start
		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/totd
		ok
	else
		msg_not_running TOTD
		exit 1
	fi
	;;
  status)
	status totd
	exit $?
	;;
  *)
	msg_usage "$0 {start|stop|restart|force-reload|status}"
	exit 3
esac

exit $RETVAL
